name: Deploy to GCP

on:
  push:
    branches: [ ci/cd ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  GKE_REGION:  ${{ secrets.GKE_REGION }}
  REGION: europe-central2
  REPO: ci-registry

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend deps & run tests

        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pytest -q backend/tests  

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend deps & run tests
        working-directory: frontend
        run: |
          npm install
          npm test --silent

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          token_format: access_token

      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gke-gcloud-auth-plugin

      - name: Configure Docker helper
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Docker login via access token
        run: |
          echo "${{ steps.auth.outputs.access_token }}" | docker login \
            -u oauth2accesstoken --password-stdin \
            ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push Backend
        run: |
          IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/backend:${{ github.sha }}
          docker build -t "$IMAGE" ./backend
          docker push "$IMAGE"

      - name: Build and push Frontend
        run: |
          IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/frontend:${{ github.sha }}
          docker build -t "$IMAGE" ./frontend
          docker push "$IMAGE"

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }}
          kubectl apply -f k8s/
          kubectl set image deployment/backend   backend=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/backend:${{ github.sha }}
          kubectl set image deployment/frontend frontend=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/frontend:${{ github.sha }}

      - name: Send success e-mail
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address:  ${{ secrets.SMTP_SERVER }}
          server_port:     ${{ secrets.SMTP_PORT }}
          username:        ${{ secrets.MAIL_USERNAME }}
          password:        ${{ secrets.MAIL_PASSWORD }}
          subject: |
            ✅ Deploy OK: ${{ github.repository }} @ ${{ github.sha }}
          body: |
            Cześć!
            
            Build i deploy **${{ github.repository }}**
            zakończyły się sukcesem.
  
            Commit:   ${{ github.sha }}
            Akcja:    https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
  
            Pozdrawiam – Twój bot CI/CD
          to:          ${{ secrets.MAIL_TO }}
          from:        "CI Bot <${{ secrets.MAIL_USERNAME }}>"
